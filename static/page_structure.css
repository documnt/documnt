/* page_structure.css: styles which affect the positioning and layout of the header, footer, and main content. */

pre {
  width: 80ch;
  margin: 0 auto 0;
  overflow: hidden;
}

/* newlines should count as <br /> tags */
main p { white-space: pre-line; }

/* Here comes a big hunk of page skeleton styling.
 *
 * The goal here is to have a header, content, and a footer. If the content
 * doesn't take up a whole page, the footer should sit at the bottom of the
 * page. If the content does take up the whole page, put the footer under the
 * content.
 *
 * This used to be really hard, but in CSS3 we have flexbox! We'll support
 * modern browsers without worrying about legacy nonsense.
 *
 * There's a top-to-bottom (column) flexbox representing the whole page
 * containing three elements: header, main, and footer. Header is itself a
 * flexbox. Main is where template data gets dumped. Footer is a bit of text in
 * a div.
 *
 * A flexbox that takes up all the vertical height (100vh) of the rendered
 * elements on the page and maximizes the size of main solves our issue. We fix
 * the height of the header and footer to the smallest needed to render
 * everything (height: auto;) and keep the main height unbounded.
 */

/* the flexbox that contains the header, main section, and footer */
/*
.page-wrapper {

  /* flexbox; what a mouthful! */
  /*
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  */
  /* sections stack atop each other, top to bottom */
  /*
  flex-direction: column;
}
*/
/**
 * The media tags and width of the text are such that the richter background
 * image remains mostly separate from the text, making sure that the text
 * is readable and not hidden by dark parts of the image.
 */

/* the content section should hog as much height as it can but stay a readable width */
main {
  flex: 1;
  width: 50vw;
  margin-left: 200px;
  margin-right: 0px;
  margin-top: 100px;
  margin-bottom: auto;
  display: inline-block;
}

/* on tiny screens, the readable width needs to increase */
@media all and (max-width: 600px) {
  main { 
    width: 60vw;
    margin-top: auto;
    margin-left: 50px;
  }
}

/* on small screens, the readable width needs to increase only slightly */
@media all and (min-width: 600px) and (max-width: 800px) {
  main { 
    width: 57vw;
    margin-left: 50px;
  }
}

/* on medium screens, the readable width needs to increase only slightly, too*/
/* but less so because of the richter background image */
@media all and (min-width: 800px) and (max-width: 1000px) {
  main { 
    width: 50vw;
    margin-left: 50px;
  }
}

/* the header and footer take as little height as possible while remaining viewable */
header, footer { height: auto; }

header { margin: 0; }

.navigation {

  /* flexbox; what a mouthful! */
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;

  /* sections sit next to each other, left to right */
  flex-direction: row;

  /* sections are centered vertically */
  align-items: center;

  list-style: none;
  margin: 0;
  height: auto;

  /* wrap on small screens */
  -webkit-flex-wrap: row wrap;
  flex-flow: row wrap;
}

/* each link in the bar has some room around it to make up for list-style:none; */
.navigation a {
  display: block;
  padding: 0px;
}

/* override browsers user agent */
ul {
  padding-left: 0px; /* was 75 px */
  margin: 0;
}

.left {
  float: left;
  margin-left: 0px; /* was 25px */
  display: inline-block;
  border-top: 1px solid rgba(0, 0, 0, 0.2);
  border-top: 1px solid rgba(0, 0, 0, 0.2);
}

/* for smallish screens, horizontally center labels */
/*
@media all and (max-width: 800px) {
  .navigation {
    justify-content: space-around;
  }
}
*/
/* for tiny screens, list menu items in order */
/*
@media all and (max-width: 600px) {
  .navigation {
    -webkit-flex-flow: column wrap;
    flex-flow: column wrap;
    padding: 0;
  }
*/
  /* draw a line under the logo */
  /*
  .navigation .logo {
    border-bottom: 1px solid rgba(0,0,0,0.2);
  }

  .navigation a {
    text-align: center;
    padding: 10px;
  }

}
*/

footer {
  margin: 20px auto 0;
  width: auto;
  border-top: 1px solid rgba(0, 0, 0, 0.2);
  text-align: center;
}

/* vi: set et sw=2 sts=2: */
